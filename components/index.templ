package components

import "github.com/kilianmandscharo/papierraser/types"
import "strconv"
import "github.com/kilianmandscharo/papierraser/utils"

templ Index(race types.Race) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<script src="https://unpkg.com/htmx.org@1.9.11"></script>
			<script src="https://unpkg.com/htmx.org@1.9.11/dist/ext/ws.js"></script>
      <link rel="stylesheet" href="/static/css/styles.css"/>
			<title>Papierraser</title>
		</head>
		<body>
			<div hx-ext="ws" ws-connect="ws://localhost:8080/ws">
				<h1>Papierraser</h1>
				<form id="form" ws-send>
					<input type="text" name="message"/>
					<input type="submit" name="submit" value="Submit"/>
				</form>
				@Track(race)
			</div>
		</body>
	</html>
}

templ Track(race types.Race) {
	<svg viewBox="0 0 100 100">
  @Grid(race.Track)
    @Line(race.Track.Finish[0], race.Track.Finish[1], "green")
		@Path(race.Track.Inner, "blue")
		@Path(race.Track.Outer, "red")
    @Players(race)
	</svg>
}

templ Players(race types.Race) {
    for _, player := range race.Players {
      @Player(race.Paths[player.Id][0], "orange")
    }
}

templ Player(position types.Point, color string) {
  <circle fill={ color } cx={ strconv.Itoa(position.X) } cy={ strconv.Itoa(position.Y) } r="2" />
}

templ Grid(track types.Track) {
    for x := 0; x <= track.Width; x++ {
      if x % 5 == 0  {
        <line { utils.GetVerticalLineAttrs(x, track.Height)... } stroke="black" />
      }
    }
    for y := 0; y <= track.Height; y++ {
      if y % 5 == 0  {
        <line { utils.GetHorizontalLineAttrs(y, track.Width)... } stroke="black" />
      }
    }
}

templ Line(start, end types.Point, strokeColor string) {
    <line x1={ strconv.Itoa(start.X) } y1={ strconv.Itoa(start.Y) } x2={ strconv.Itoa(end.X) } y2={ strconv.Itoa(end.Y) } stroke="green" />
}

templ Path(path types.Path, strokeColor string) {
		<polygon points={ utils.GetPathString(path) } fill="none" stroke={ strokeColor }></polygon>
}
